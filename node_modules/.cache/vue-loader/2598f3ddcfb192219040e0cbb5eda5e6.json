{"remainingRequest":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caijianli/Desktop/malladmin/src/views/container/goodsCategory/index.vue?vue&type=style&index=0&id=9c765282&scoped=true&lang=scss&","dependencies":[{"path":"/Users/caijianli/Desktop/malladmin/src/views/container/goodsCategory/index.vue","mtime":1582099472000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQovKi5sYXlvdXQtdGl0bGUtYm94IHsqLw0KLyogICEqbWFyZ2luLXRvcDogMTBweDsqISovDQovKiAgLnRpdGxlcyB7Ki8NCi8qICAgIGZvbnQtc2l6ZTogMjBweDsqLw0KLyogIH0qLw0KLyogIGRpc3BsYXk6IGZsZXg7Ki8NCi8qICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Ki8NCi8qfSovDQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/container/goodsCategory","sourcesContent":["<template>\r\n  <el-container class=\"layout\">\r\n    <el-header height=\"50px\" class=\"layout-title-box\">\r\n      <div class=\"titles\">{{ route.meta.title }}</div>\r\n      <div class=\"operation\">\r\n        <el-button size=\"medium\" type=\"primary\" icon=\"el-icon-refresh\" @click=\"getGoodsCategoryList\">刷新表格</el-button>\r\n        <!-- <el-button size=\"medium\" type=\"primary\" icon=\"el-icon-plus\" @click=\"changeGoodsCategory\">新增分类</el-button> -->\r\n      </div>\r\n    </el-header>\r\n    <el-main class=\"layout-content\">\r\n      <el-card shadow=\"never\" body-style=\"border: 0;\">\r\n        <el-table\r\n          :tree-props=\"{ children: 'children' }\"\r\n          row-key=\"id\"\r\n          v-loading=\"isLoading\"\r\n          header-row-class-name=\"goodsTable\"\r\n          :data=\"tableData\"\r\n          size=\"medium\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-table-column\r\n            prop=\"name\"\r\n            label=\"商品分类名称\"\r\n            show-overflow-tooltip\r\n          ></el-table-column>\r\n          <el-table-column prop=\"rank\" label=\"排序\"></el-table-column>\r\n          <el-table-column prop=\"statusName\" label=\"显示状态\"></el-table-column>\r\n          <el-table-column prop=\"address\" label=\"操作\" width=\"200\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button v-if=\"scope.row.level === 1\" type=\"text\" @click=\"changeGoodsCategory(scope.row)\">新增子类</el-button>\r\n              <el-button type=\"text\" @click=\"changeGoodsCategory(scope.row, 'edit')\">编辑</el-button>\r\n              <el-button type=\"text\" v-if=\"scope.row.status === 1\" @click=\"updateStatus(scope.row, 2)\">下架</el-button>\r\n              <el-button type=\"text\" v-else @click=\"updateStatus(scope.row, 1)\">上架</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n      <!-- <div class=\"content-pagination\">\r\n        <el-pagination\r\n          background\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"page.currentPage\"\r\n          :page-sizes=\"pageSizes\"\r\n          :page-size=\"page.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"page.total\"\r\n        >\r\n        </el-pagination>\r\n      </div> -->\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport * as toast from \"@/commonutils/common\";\r\nimport * as request from \"./request\";\r\n\r\nexport default {\r\n  name: \"index\",\r\n  data() {\r\n    return {\r\n      pageSizes: JSON.parse(process.env.VUE_APP_PAGE_SIZE),\r\n      status: {\r\n        // 请求状态码\r\n        success: parseInt(process.env.VUE_APP_BASE_SUCC_CODE),\r\n        tokenError: parseInt(process.env.VUE_APP_BASE_ERR_TOKEN_CODE)\r\n      },\r\n      isLoading: false,\r\n      tableData: [],\r\n      filter: {\r\n        searchKey: \"\",\r\n        category: \"\"\r\n      },\r\n      page: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    route() {\r\n      return this.$route;\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * 获取商品分类列表\r\n     * @returns {Promise<void>} void\r\n     */\r\n    async getGoodsCategoryList() {\r\n      this.isLoading = true;\r\n      const data = await request.getGoodsCategory({\r\n        isAll: true\r\n      });\r\n      this.isLoading = false;\r\n      if (data.code !== toast.STATUS_CODE.success) {\r\n        toast.errorMsg(this, data.msg);\r\n        return;\r\n      }\r\n      this.page.total = data.result.count;\r\n      this.tableData = data.result.list;\r\n    },\r\n    /**\r\n     * 翻页\r\n     * @param {String} val\r\n     * @returns {Promise<void>} void\r\n     */\r\n    handleCurrentChange(val) {\r\n      this.page.currentPage = val;\r\n      this.getGoodsCategoryList();\r\n    },\r\n    /**\r\n     * 设置页数\r\n     * @param {String} val\r\n     * @returns {Promise<void>} void\r\n     */\r\n    handleSizeChange(val) {\r\n      this.page.currentPage = 1;\r\n      this.page.pageSize = val;\r\n      this.getGoodsCategoryList();\r\n    },\r\n    //校验编辑名称\r\n    editName(name) {\r\n      if (name.length > 10) {\r\n        return \"分类名称不能超过10个字符\";\r\n      }\r\n    },\r\n    /**\r\n     * 编辑商品分类\r\n     * @param {Object} item\r\n     * @param {Object} type\r\n     * @returns {void}\r\n     */\r\n    changeGoodsCategory(item, type) {\r\n      const isType = Boolean(type === \"edit\")\r\n      this.$prompt(\"分类名称：\", `${isType ? \"编辑\" : \"新增\"}分类`, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        inputPattern: /\\S/,\r\n        inputValidator: this.editName,\r\n        inputValue: isType ? item.name : undefined,\r\n        inputErrorMessage: \"分类名称不能为空\",\r\n        beforeClose: (action, instance, done) => {\r\n          if (action === \"confirm\") {\r\n            let valueOld = item.name;\r\n            let valueNew = instance.inputValue;\r\n            if (valueNew === valueOld) {\r\n              done();\r\n            } else {\r\n              this.interceptorFn(async () => {\r\n                this.isLoading = true;\r\n                const data = await request.setGoodsCategory({\r\n                  fatherId: isType ? item.fatherId : item.id,\r\n                  rank: item.rank,\r\n                  name: valueNew,\r\n                  id: isType ? item.id : undefined\r\n                });\r\n                this.isLoading = false;\r\n                if (data.code !== toast.STATUS_CODE.success) {\r\n                  toast.errorMsg(this, data.msg);\r\n                  return;\r\n                }\r\n                done();\r\n                this.getGoodsCategoryList();\r\n              });\r\n            }\r\n          } else {\r\n            done();\r\n          }\r\n        }\r\n      })\r\n        .then(({ value }) => {\r\n          toast.successMsg(this, isType ? \"编辑成功\" : \"创建成功\");\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    /**\r\n     * 修改商品分类状态\r\n     * @param {Object} item\r\n     * @param {Object} status\r\n     * @returns {void}\r\n     */\r\n    updateStatus(item, status) {\r\n      const statusName = status === 1 ? \"上架\" : \"下架\";\r\n      this.$confirm(`确定要${statusName}分类【${item.name}】？`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        beforeClose: (action, instance, done) => {\r\n          if (action === \"confirm\") {\r\n            this.interceptorFn(async () => {\r\n              this.isLoading = true;\r\n              const data = await request.updateStatus({\r\n                id: item.id,\r\n                status: status\r\n              });\r\n              this.isLoading = false;\r\n              if (data.code !== this.status.success) {\r\n                toast.errorMsg(this, data.msg);\r\n                return;\r\n              }\r\n              done();\r\n              this.getGoodsCategoryList();\r\n            });\r\n          } else {\r\n            done();\r\n          }\r\n        }\r\n      })\r\n        .then(() => {\r\n          toast.successMsg(this, \"操作成功\");\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  },\r\n  created() {\r\n    this.getGoodsCategoryList();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n/*.layout-title-box {*/\r\n/*  !*margin-top: 10px;*!*/\r\n/*  .titles {*/\r\n/*    font-size: 20px;*/\r\n/*  }*/\r\n/*  display: flex;*/\r\n/*  justify-content: space-between;*/\r\n/*}*/\r\n</style>\r\n"]}]}