{"remainingRequest":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caijianli/Desktop/malladmin/src/views/container/goodsManage/allGoods/index.vue?vue&type=style&index=0&id=55c70d14&scoped=true&lang=scss&","dependencies":[{"path":"/Users/caijianli/Desktop/malladmin/src/views/container/goodsManage/allGoods/index.vue","mtime":1582099472000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8qLmxheW91dC10aXRsZS1ib3ggeyovDQovKiAgbWFyZ2luLXRvcDogMTBweDsqLw0KLyogIC50aXRsZXMgeyovDQovKiAgICBmb250LXNpemU6IDIwcHg7Ki8NCi8qICB9Ki8NCi8qICBkaXNwbGF5OiBmbGV4OyovDQovKiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyovDQovKn0qLw0KLmdvb2RzVGl0LWJveCB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsNCiAgLmVsLWltYWdlIHsNCiAgICBtaW4td2lkdGg6IDQwcHg7DQogICAgbWFyZ2luLXJpZ2h0OiA1cHg7DQogIH0NCn0NCi5nb29kcy1ncm91cC1ib3ggew0KICBkaXNwbGF5OiBibG9jazsNCiAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQp9DQoubGF5b3V0LXRpdGxlLWJveC5sYXlvdXQtdGl0bGUtZmlsdGVyIHsNCiAgLmZpbHRlciB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7DQogICAgLmZpbHRlci1pdGVtIHsNCiAgICAgIG1hcmdpbi1yaWdodDogNDBweDsNCiAgICAgICYuYnRuSXRlbSB7DQogICAgICAgIG1hcmdpbi1yaWdodDogMjBweDsNCiAgICAgIH0NCiAgICAgICY6bGFzdC1jaGlsZCB7DQogICAgICAgIG1hcmdpbi1yaWdodDogMDsNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsosBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/container/goodsManage/allGoods","sourcesContent":["<template>\r\n  <el-container class=\"layout config-group-container\">\r\n    <el-header\r\n      style=\"min-height: 42px; height: auto\"\r\n      class=\"layout-title-box layout-title-filter\"\r\n    >\r\n      <div class=\"filter\">\r\n        <div class=\"filter-item\">\r\n          <label>商品名称</label>\r\n          <el-input\r\n            v-model=\"filter.searchKey\"\r\n            clearable\r\n            placeholder=\"请输入关键字搜索\"\r\n            style=\"width: 210px;\"\r\n          ></el-input>\r\n        </div>\r\n        <div class=\"filter-item\">\r\n          <label>商品分类</label>\r\n          <el-cascader\r\n            :append-to-body=\"false\"\r\n            style=\"width: 210px;\"\r\n            filterable\r\n            clearable\r\n            ref=\"getCategory\"\r\n            v-model=\"filter.category\"\r\n            :props=\"{ value: 'id', label: 'name', emitPath: false }\"\r\n            :options=\"goodsCategoryList\"\r\n            :show-all-levels=\"false\"\r\n            placeholder=\"请选择商品分类\"\r\n          >\r\n            <template slot-scope=\"{ node, data }\">\r\n              <span>{{ data.name }}</span>\r\n              <span v-if=\"!node.isLeaf\"> ({{ data.children.length }}) </span>\r\n            </template>\r\n          </el-cascader>\r\n        </div>\r\n        <div class=\"filter-item btnItem\">\r\n          <el-button type=\"primary\" @click=\"filterData\">查询</el-button>\r\n        </div>\r\n        <div class=\"filter-item btnItem\">\r\n          <el-button type=\"info\" @click=\"restFilter\">重置</el-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"operation\">\r\n        <el-button size=\"medium\" type=\"primary\" icon=\"el-icon-refresh\" @click=\"getGoodsList\">刷新表格</el-button>\r\n        <el-button size=\"medium\" type=\"primary\" icon=\"el-icon-plus\" @click=\"addGoods\">发布商品</el-button>\r\n      </div>\r\n    </el-header>\r\n    <el-main class=\"layout-content\">\r\n      <el-card shadow=\"never\" body-style=\"border: 0;\">\r\n        <el-table\r\n          v-loading=\"isLoading\"\r\n          min-height=\"500\"\r\n          header-row-class-name=\"goodsTable\"\r\n          :data=\"tableData\"\r\n          size=\"medium\"\r\n          style=\"width: 100%;\"\r\n        >\r\n          <el-table-column prop=\"name\" min-width=\"150\" label=\"商品名称\">\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"goodsTit-box\">\r\n                <el-image\r\n                  style=\"width: 40px; height: 40px; vertical-align: middle\"\r\n                  :src=\"scope.row.firstPicture\"\r\n                  title=\"点击预览\"\r\n                  fit=\"cover\"\r\n                  :preview-src-list=\"[scope.row.firstPicture]\"\r\n                >\r\n                  <div slot=\"error\" class=\"image-slot\" title=\"暂无商品主图\">\r\n                    <img :src=\"noImg\" width=\"40\" height=\"40\" />\r\n                  </div>\r\n                  <div slot=\"placeholder\" class=\"image-slot\">\r\n                    <font size=\"1\">load</font>\r\n                    <span class=\"el-icon-loading\"></span>\r\n                  </div>\r\n                </el-image>\r\n                <div class=\"tooltip\" :title=\"scope.row.name\">{{ scope.row.name }}</div>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column align=\"center\" width=\"150\" prop=\"class.name\" label=\"商品分类\"></el-table-column>\r\n          <el-table-column align=\"center\" label=\"商品标签\">\r\n            <template slot-scope=\"scope\">\r\n              <template v-if=\"scope.row.tags.length\">\r\n                <div\r\n                  :title=\"setGoodsGroup(scope.row.tags)\"\r\n                  class=\"goods-group-box\"\r\n                >{{ setGoodsGroup(scope.row.tags) }}</div>\r\n              </template>\r\n              <template v-else>-</template>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column column-key=\"publishTime\" width=\"210\" align=\"center\" label=\"发布时间\">\r\n            <template slot-scope=\"scope\">{{ setPulishTime(scope.row.publishTime) }}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"showPrice\" width=\"130\" sortable label=\"显示价(￥)\">\r\n            <template slot-scope=\"scope\">{{ setShowPrice(scope.row.showPrice) }}</template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"totalStockNum\" width=\"100\" sortable label=\"总库存\">\r\n            <template slot-scope=\"scope\">\r\n              {{scope.row.totalStockNum}}\r\n              <el-button type=\"text\" @click=\"showGoodsSku(scope.row)\">修改库存</el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"rank\" width=\"100\" sortable align=\"center\" label=\"排序\">\r\n            <template slot-scope=\"scope\">\r\n              {{scope.row.rank}}\r\n              <el-button type=\"text\" @click=\"changeGoodsRank(scope.row)\">修改排序</el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"salesNum\" width=\"120\" sortable align=\"center\" label=\"累计销量\"></el-table-column>\r\n          <el-table-column\r\n            width=\"100\"\r\n            align=\"center\"\r\n            :filters=\"statusList\"\r\n            :filter-method=\"filterTag\"\r\n            filter-placement=\"bottom-start\"\r\n            column-key=\"statusName\"\r\n            label=\"状态\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              <span :style=\"{ color: setFontColor(scope.row.statusName) }\">\r\n                {{ scope.row.statusName }}\r\n              </span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"address\" fixed=\"right\" label=\"操作\" width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button type=\"text\" @click=\"edit(scope.row)\">编辑</el-button>\r\n              <el-button\r\n                v-if=\"scope.row.status === 4\"\r\n                type=\"text\"\r\n                @click=\"updateStatus(scope.row, 3)\"\r\n                >上架</el-button\r\n              >\r\n              <el-button\r\n                v-else-if=\"scope.row.status === 3\"\r\n                type=\"text\"\r\n                @click=\"updateStatus(scope.row, 4)\"\r\n                >下架</el-button\r\n              >\r\n              <el-button\r\n                type=\"text\"\r\n                @click=\"showRecommendVis(scope.row)\"\r\n              >推荐\r\n              </el-button>\r\n              <el-button type=\"text\" @click=\"updateStatus(scope.row, 5)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n      <div class=\"content-pagination\">\r\n        <el-pagination\r\n          background\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"page.currentPage\"\r\n          :page-sizes=\"pageSizes\"\r\n          :page-size=\"page.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"page.total\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-main>\r\n    <el-dialog\r\n      title=\"修改商品库存\"\r\n      width=\"750px \"\r\n      destroy-on-close\r\n      :close-on-click-modal=\"false\"\r\n      class=\"add-good-dialog\"\r\n      :visible.sync=\"skuCountDial\"\r\n    >\r\n      <div class=\"good-main1\" v-loading=\"skuCountLoad\">\r\n        <el-table v-loading=\"isShowSku\" :data=\"skuCountData\">\r\n          <el-table-column\r\n            v-for=\"item in skuCountHead\"\r\n            :key=\"item.id\"\r\n            property=\"date\"\r\n            :label=\"item\"\r\n          >\r\n            <template slot-scope=\"scope\">\r\n              {{ scope.row[item] }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column property=\"totalStockNum\" label=\"当前库存\"></el-table-column>\r\n          <el-table-column property=\"change\" label=\"库存增减\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input-number v-model=\"scope.row.change\" :step=\"1\" step-strictly></el-input-number>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <el-alert show-icon title=\"点击加减号来增减库存；增减库存为负数：则减少当前库存\" type=\"info\"> </el-alert>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"skuCountDial = false\">取 消</el-button>\r\n        <el-button @click=\"updateSkuStock\" :disabled=\"isShowSku\" :loading=\"isUpdateSku\" type=\"primary\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    <el-dialog\r\n      title=\"推荐商品\"\r\n      width=\"600px\"\r\n      destroy-on-close\r\n      :close-on-click-modal=\"false\"\r\n      class=\"add-good-dialog\"\r\n      :visible.sync=\"recommendVis\"\r\n    >\r\n      <div class=\"good-main1\">\r\n        <el-form\r\n          :model=\"recommendForm\"\r\n          size=\"medium\"\r\n          :rules=\"rules\"\r\n          ref=\"recommendForm\"\r\n          label-width=\"80px\"\r\n          class=\"demo-ruleForm\"\r\n        >\r\n          <el-form-item label=\"推荐类型\" prop=\"recommendType\">\r\n            <el-select\r\n              v-model=\"recommendForm.recommendType\"\r\n              placeholder=\"请选择\"\r\n            >\r\n              <el-option\r\n                :title=\"item.name\"\r\n                style=\"width: 217px\"\r\n                v-for=\"item in recommendList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.name\"\r\n                :value=\"item.id\"\r\n              ></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"推荐时间\" prop=\"orderTime\">\r\n            <el-date-picker\r\n              :editable=\"false\"\r\n              v-model=\"recommendForm.orderTime\"\r\n              :picker-options=\"bannerPickerOptions\"\r\n              type=\"datetimerange\"\r\n              unlink-panels\r\n              value-format=\"timestamp\"\r\n              range-separator=\"至\"\r\n              :default-time=\"['12:00:00', '12:00:00']\"\r\n              start-placeholder=\"开始时间\"\r\n              end-placeholder=\"结束时间\"\r\n            ></el-date-picker>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"recommendVis = false\">取 消</el-button>\r\n        <el-button @click=\"updateRecommend\" type=\"primary\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getGoodsList,\r\n  delGoods,\r\n  updateRank,\r\n  getSkus,\r\n  updateSkuStock,\r\n  recommend\r\n} from \"../createGoods/controller/request\";\r\nimport {\r\n  successMsg,\r\n  jsonDeepClone,\r\n  STATUS_CODE,\r\n  errorMsg,\r\n  dataFormat,\r\n  regFenToYuan\r\n} from \"@/commonutils/common\";\r\nimport noImg from \"@/assets/images/noImg.jpg\";\r\n\r\nexport default {\r\n  name: \"index\",\r\n  data() {\r\n    return {\r\n      recommendVis: false,\r\n      isShowSku: false,\r\n      isUpdateSku: false,\r\n      skuCountLoad: false,\r\n      skuCountData: [],\r\n      skuCountHead: [],\r\n      skuCountDial: false,\r\n      recommendForm: {\r\n        recommendType: \"\",\r\n        begin_time: \"\",\r\n        end_time: \"\",\r\n        orderTime: [],\r\n        rank: \"\"\r\n      },\r\n      recommendList: [\r\n        {\r\n          name: \"新品首发\",\r\n          id: 1\r\n        },\r\n        {\r\n          name: \"爆款推荐\",\r\n          id: 2\r\n        }\r\n      ],\r\n      bannerPickerOptions: {\r\n        disabledDate(time) {\r\n          return time.getTime() < Date.now() - 8.64e7;\r\n        }\r\n      },\r\n      rules: {\r\n        recommendType: [\r\n          { required: true, message: \"请选择推荐类型\", trigger: \"change\" }\r\n        ],\r\n        orderTime: [\r\n          { required: true, message: \"请选择推荐时间\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      pageSizes: JSON.parse(process.env.VUE_APP_PAGE_SIZE),\r\n      noImg: noImg,\r\n      isLoading: false,\r\n      tableData: [],\r\n      filter: {\r\n        searchKey: \"\",\r\n        category: 0\r\n      },\r\n      page: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        total: 0\r\n      }\r\n    };\r\n  },\r\n  props: [\"goodsCategoryList\"],\r\n  computed: {\r\n    /**\r\n     * 路由信息\r\n     * @returns {Route} 路由信息\r\n     */\r\n    route() {\r\n      return this.$route;\r\n    },\r\n    /**\r\n     * 筛选列表\r\n     * @returns {[]} 筛选列表\r\n     */\r\n    statusList() {\r\n      let fliterList = [];\r\n      if (this.tableData.length) {\r\n        this.tableData.forEach(item => {\r\n          if (\r\n            fliterList.filter(ele => ele.text === item.statusName).length === 0\r\n          ) {\r\n            fliterList.push({\r\n              text: item.statusName,\r\n              value: item.statusName\r\n            });\r\n          }\r\n        });\r\n      }\r\n      return fliterList;\r\n    },\r\n    /**\r\n     * 设置状态颜色\r\n     * @returns {String} color\r\n     */\r\n    setFontColor() {\r\n      return val => {\r\n        switch (val) {\r\n          case \"上架中\":\r\n            return \"#26AF61\";\r\n          case \"草稿\":\r\n            return \"#999\";\r\n          case \"已删除\":\r\n            return \"#ff7736\";\r\n          default:\r\n            return \"#333\";\r\n        }\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    showRecommendVis(item) {\r\n      if (item.id) {\r\n        this.$set(this.recommendForm, \"id\", item.id);\r\n        this.recommendVis = true;\r\n      }\r\n    },\r\n    updateRecommend() {\r\n      this.$refs[\"recommendForm\"].validate(async valid => {\r\n        if (!valid) {\r\n          return;\r\n        }\r\n        const { code, msg } = await recommend({\r\n          id: this.recommendForm.id,\r\n          recommendType: this.recommendForm.recommendType,\r\n          begin_time: this.recommendForm.orderTime[0] / 1000,\r\n          end_time: this.recommendForm.orderTime[1] / 1000\r\n        });\r\n        if (code !== STATUS_CODE.success) {\r\n          errorMsg(this, msg);\r\n          return;\r\n        }\r\n        successMsg(this, \"推荐成功\");\r\n        this.recommendVis = false;\r\n      })\r\n    },\r\n    /**\r\n     * 修改商品库存\r\n     * @returns {void}\r\n     */\r\n    async updateSkuStock() {\r\n      const list = this.skuCountData;\r\n      if (\r\n        list.every(item => {\r\n          return item.change === 0;\r\n        })\r\n      ) {\r\n        this.skuCountDial = false;\r\n      } else {\r\n        this.isUpdateSku = true;\r\n        const { code, msg } = await updateSkuStock({\r\n          list: list\r\n        });\r\n        this.isUpdateSku = false;\r\n        if (code !== STATUS_CODE.success) {\r\n          errorMsg(this, msg);\r\n          return;\r\n        }\r\n        await this.getGoodsList();\r\n        this.skuCountDial = false;\r\n      }\r\n      this.skuCountData = [];\r\n      this.skuCountHead = [];\r\n    },\r\n    /**\r\n     * 获取商品库存\r\n     * @param {Object} val\r\n     * @returns {void}\r\n     */\r\n    async showGoodsSku(val) {\r\n      this.skuCountData = [];\r\n      this.skuCountHead = [];\r\n      this.skuCountDial = true;\r\n      this.isShowSku = true;\r\n      const { code, msg, result } = await getSkus({\r\n        id: val.id\r\n      });\r\n      if (code !== STATUS_CODE.success) {\r\n        errorMsg(this, msg);\r\n        return;\r\n      }\r\n      const sku = result.skus;\r\n      const options = sku[0].options.list;\r\n      const tableHead = [];\r\n      const tableData = [];\r\n      options.forEach(item => {\r\n        tableHead.push(item.key);\r\n      });\r\n      // 遍历sku，生成表头和表格数据\r\n      await sku.forEach(item => {\r\n        const obj = {};\r\n        item.options.list.forEach(option => {\r\n          obj[option.key] = option.value;\r\n        });\r\n        obj[\"totalStockNum\"] = item.totalStockNum;\r\n        obj[\"change\"] = 0;\r\n        obj[\"id\"] = item.id;\r\n        tableData.push(obj);\r\n      });\r\n      this.$nextTick(() => {\r\n        this.skuCountData = tableData;\r\n        this.skuCountHead = tableHead;\r\n        this.isShowSku = false;\r\n      });\r\n    },\r\n    //校验正整数\r\n    editName(val) {\r\n      if (!/^([0]|[1-9][0-9]*)$/.test(val)) {\r\n        return \"排序数值不合法，必须为整数值\";\r\n      }\r\n    },\r\n    /**\r\n     * 编辑商品排序\r\n     * @param {Object} item\r\n     * @param {Object} type\r\n     * @returns {void}\r\n     */\r\n    changeGoodsRank(item) {\r\n      this.$prompt(\"排序数值：\", \"编辑排序\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        inputPattern: /\\S/,\r\n        inputValidator: this.editName,\r\n        inputErrorMessage: \"排序数值不能为空\",\r\n        beforeClose: (action, instance, done) => {\r\n          if (action === \"confirm\") {\r\n            this.interceptorFn(async () => {\r\n              this.isLoading = true;\r\n              const data = await updateRank({\r\n                rank: instance.inputValue,\r\n                id: item.id\r\n              });\r\n              this.isLoading = false;\r\n              if (data.code !== STATUS_CODE.success) {\r\n                errorMsg(this, data.msg);\r\n                return;\r\n              }\r\n              done();\r\n              this.getGoodsList();\r\n            });\r\n          } else {\r\n            done();\r\n          }\r\n        }\r\n      })\r\n        .then(() => {\r\n          successMsg(this, \"编辑成功\");\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    setGoodsGroup(val) {\r\n      let str = \"\";\r\n      if (val.length) {\r\n        val.forEach(item => {\r\n          str += item.name + \"/\";\r\n        });\r\n      }\r\n      return str.substring(0, str.length - 1);\r\n    },\r\n    /**\r\n     * 根据条件查询商品\r\n     * @returns {void}\r\n     */\r\n    filterData() {\r\n      this.page.currentPage = 1;\r\n      this.page.pageSize = 10;\r\n      this.getGoodsList();\r\n    },\r\n    /**\r\n     * 分转元\r\n     * @param {Number} val\r\n     * @returns {Route} 元\r\n     */\r\n    setShowPrice(val) {\r\n      return regFenToYuan(val);\r\n    },\r\n    /**\r\n     * 时间戳格式化\r\n     * @param {Number} val\r\n     * @returns {string} yyyy-m-d hh:mm:ss\r\n     */\r\n    setPulishTime(val) {\r\n      if (!val || !parseInt(val)) {\r\n        return \"-\";\r\n      } else {\r\n        return dataFormat(val);\r\n      }\r\n    },\r\n    /**\r\n     * 重置筛选\r\n     * @returns {void}\r\n     */\r\n    restFilter() {\r\n      this.filter.searchKey = \"\";\r\n      this.filter.category = 0;\r\n      this.page.currentPage = 1;\r\n      this.page.pageSize = 10;\r\n      this.getGoodsList();\r\n    },\r\n    /**\r\n     * 根据条件获取商品列表\r\n     * @returns {Promise<void>} 所有商品列表\r\n     */\r\n    async getGoodsList() {\r\n      this.isLoading = true;\r\n      const params = {\r\n        name: this.filter.searchKey,\r\n        classId: parseInt(this.filter.category),\r\n        page: this.page.currentPage,\r\n        pageSize: this.page.pageSize\r\n      };\r\n      const data = await getGoodsList(params);\r\n      this.isLoading = false;\r\n      if (data.code !== STATUS_CODE.success) {\r\n        errorMsg(this, data.msg);\r\n        return;\r\n      }\r\n      this.tableData = jsonDeepClone(data.result.list);\r\n      this.tableData.forEach(item => {\r\n        item.showPrice = parseInt(item.showPrice);\r\n      });\r\n      this.page.total = data.result.count;\r\n    },\r\n    /**\r\n     * 过滤状态列\r\n     * @param {Object} value\r\n     * @param {Object} row\r\n     * @param {Object} column\r\n     * @returns {Object} Object\r\n     */\r\n    filterTag(value, row, column) {\r\n      const property = column[\"property\"];\r\n      return row[property] === value;\r\n    },\r\n    /**\r\n     * 翻页\r\n     * @param {Number} val\r\n     * @returns {void}\r\n     */\r\n    handleCurrentChange(val) {\r\n      this.page.currentPage = val;\r\n      this.getGoodsList();\r\n    },\r\n    /**\r\n     * 设置页数\r\n     * @param {Number} val\r\n     * @returns {void}\r\n     */\r\n    handleSizeChange(val) {\r\n      this.page.currentPage = 1;\r\n      this.page.pageSize = val;\r\n      this.getGoodsList();\r\n    },\r\n    /**\r\n     * 创建商品，转跳页面\r\n     * @returns {void}\r\n     */\r\n    addGoods() {\r\n      this.$router.push({\r\n        name: \"createGoods\",\r\n        query: {\r\n          title_: this.route.meta.title,\r\n          path_: this.route.path\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 编辑标签\r\n     * @param {Object}item\r\n     * @returns {void}\r\n     */\r\n    edit(item) {\r\n      this.$router.push({\r\n        name: \"createGoods\",\r\n        query: {\r\n          title_: this.route.meta.title,\r\n          path_: this.route.path,\r\n          goodsId: item.id\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 商品状态\r\n     * @param {Number} status\r\n     * @description 返回:商品状态名称\r\n     * @returns {String} status\r\n     */\r\n    setStatusName(status) {\r\n      let statusName;\r\n      if (status === STATUS_CODE.goodsDelete) {\r\n        statusName = \"删除\";\r\n      } else if (status === STATUS_CODE.goodsRelease) {\r\n        statusName = \"上架\";\r\n      } else if (status === STATUS_CODE.goodsLower) {\r\n        statusName = \"下架\";\r\n      } else {\r\n        statusName = \"未知状态\";\r\n      }\r\n      return statusName;\r\n    },\r\n    /**\r\n     * 修改商品状态\r\n     * @param {Object} item\r\n     * @param {Number} status\r\n     * @returns {void}\r\n     */\r\n    updateStatus(item, status) {\r\n      if (!status || !item) {\r\n        return new Error(\"位置错误：!status || !item\");\r\n      }\r\n      const statusName = this.setStatusName(status);\r\n      this.$confirm(`确定要${statusName}商品【${item.name}】？`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\"\r\n      })\r\n        .then(() => {\r\n          this.isLoading = true;\r\n          this.interceptorFn(async () => {\r\n            const data = await delGoods({\r\n              id: parseInt(item.id),\r\n              status: status\r\n            });\r\n            this.isLoading = false;\r\n            if (data.code !== STATUS_CODE.success) {\r\n              errorMsg(this, data.msg);\r\n              return;\r\n            }\r\n            successMsg(this, \"操作成功\");\r\n            this.getGoodsList();\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    }\r\n  },\r\n  created() {\r\n    this.getGoodsList();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n/*.layout-title-box {*/\r\n/*  margin-top: 10px;*/\r\n/*  .titles {*/\r\n/*    font-size: 20px;*/\r\n/*  }*/\r\n/*  display: flex;*/\r\n/*  justify-content: space-between;*/\r\n/*}*/\r\n.goodsTit-box {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  .el-image {\r\n    min-width: 40px;\r\n    margin-right: 5px;\r\n  }\r\n}\r\n.goods-group-box {\r\n  display: block;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n.layout-title-box.layout-title-filter {\r\n  .filter {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    .filter-item {\r\n      margin-right: 40px;\r\n      &.btnItem {\r\n        margin-right: 20px;\r\n      }\r\n      &:last-child {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}