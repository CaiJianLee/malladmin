{"remainingRequest":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/caijianli/Desktop/malladmin/src/views/container/goodsManage/goodsSpecifications/goodsSpecifications.vue?vue&type=style&index=0&id=9fa1f6de&scoped=true&lang=scss&","dependencies":[{"path":"/Users/caijianli/Desktop/malladmin/src/views/container/goodsManage/goodsSpecifications/goodsSpecifications.vue","mtime":1582099472000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/caijianli/Desktop/malladmin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5zcGVjaWZpY2F0aW9ucy1zZXQgew0KICB3aWR0aDogYXV0bzsNCiAgbWFyZ2luOiAwIGF1dG87DQogIC50YWctbGlzdCB7DQogICAgbWFyZ2luLXRvcDogMjBweDsNCiAgICBtYXgtaGVpZ2h0OiAzMDBweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgLnR5cGUtbGlzdCB7DQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgcGFkZGluZy1sZWZ0OiA2OHB4Ow0KICAgICAgbWFyZ2luLXRvcDogMjBweDsNCiAgICAgIGZsZXgtd3JhcDogd3JhcDsNCiAgICAgIC50YWctaXRlbSB7DQogICAgICAgIG1hcmdpbi1yaWdodDogMjBweDsNCiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgICAgIH0NCiAgICB9DQogIH0NCiAgLnNwZWNpZmljYXRpb25zLXRhYmxlIHsNCiAgICBtaW4td2lkdGg6IDEwMDBweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIC8qcGFkZGluZy1sZWZ0OiAzMHB4OyovDQogICAgbWFyZ2luLXRvcDogMjBweDsNCiAgICAudGFibGUtdGl0bGUgew0KICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgY29sb3I6ICMzMzMzMzM7DQogICAgICBmb250LXdlaWdodDogYm9sZGVyOw0KICAgICAgcGFkZGluZy1yaWdodDogMTVweDsNCiAgICB9DQogIH0NCiAgLnR5cGUtc3ViIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgPiAuc2F2ZSB7DQogICAgICBtYXJnaW4tbGVmdDogNjhweDsNCiAgICB9DQogICAgPiBkaXYucmVkIHsNCiAgICAgIGNvbG9yOiAjZjAwOw0KICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["goodsSpecifications.vue"],"names":[],"mappingsigBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"goodsSpecifications.vue","sourceRoot":"src/views/container/goodsManage/goodsSpecifications","sourcesContent":["<template>\r\n  <section class=\"layout\">\r\n    <div class=\"specifications-set\">\r\n      <div class=\"type-sub\" v-if=\"this.specificationsData.length < 2 && !isEdit\">\r\n        <div class=\"red\">*</div>\r\n        <el-button\r\n          size=\"medium\"\r\n          type=\"primary\"\r\n          icon=\"el-icon-plus\"\r\n          @click=\"addSpecifications\"\r\n          >添加规格</el-button\r\n        >\r\n      </div>\r\n      <div class=\"min-scrollbar\">\r\n        <template v-for=\"(item, index) in specificationsData\">\r\n          <div :key=\"index\" class=\"tag-list\">\r\n            <div class=\"tag-item name\">\r\n              <el-form-item label=\"规格名称\">\r\n                <el-input\r\n                  size=\"medium\"\r\n                  style=\"width: 150px;\"\r\n                  v-model=\"item.specifications\"\r\n                >\r\n                  <el-button\r\n                    v-if=\"!isEdit\"\r\n                    type=\"text\"\r\n                    slot=\"suffix\"\r\n                    icon=\"el-icon-error\"\r\n                    @click=\"delSpecifications(item)\"\r\n                  ></el-button>\r\n                </el-input>\r\n              </el-form-item>\r\n            </div>\r\n            <div class=\"type-list\">\r\n              <div class=\"tag-item\" v-for=\"type in item.type\" :key=\"type.id\">\r\n                <el-input\r\n                  size=\"medium\"\r\n                  style=\"width: 150px;\"\r\n                  v-model=\"type.name\"\r\n                >\r\n                  <el-button\r\n                    v-if=\"type.isNew\"\r\n                    type=\"text\"\r\n                    size=\"medium\"\r\n                    slot=\"suffix\"\r\n                    icon=\"el-icon-error\"\r\n                    @click=\"delType(type, item)\"\r\n                  ></el-button>\r\n                </el-input>\r\n              </div>\r\n              <div class=\"tag-item\" v-if=\"item.type.length < 10\">\r\n                <el-button\r\n                  size=\"medium\"\r\n                  icon=\"el-icon-plus\"\r\n                  @click=\"addType(item)\"\r\n                  >添加规格值</el-button\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <div class=\"type-sub\" v-if=\"this.specificationsData.length\">\r\n          <el-button class=\"save\" type=\"primary\" title=\"点击保存并生成规格明细\" @click=\"saveData\">保存</el-button>\r\n        </div>\r\n      </div>\r\n      <main class=\"specifications-table\" v-if=\"tableData.length\">\r\n        <div class=\"table-title\">\r\n          规格明细\r\n        </div>\r\n        <el-table\r\n          :data=\"tableData\"\r\n          border\r\n          max-height=\"400\"\r\n          size=\"mini\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-table-column v-for=\"(item, index) in headData\" :key=\"item + index\" :label=\"item\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ scope.row[item] }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"原价\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input-number\r\n                style=\"width:100%\"\r\n                size=\"mini\"\r\n                v-model=\"scope.row.showPrice\"\r\n                controls-position=\"right\"\r\n                :precision=\"2\"\r\n                :step=\"0.1\"\r\n                :min=\"0.01\"\r\n                :max=\"99999\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"售价\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input-number\r\n                size=\"mini\"\r\n                style=\"width:100%\"\r\n                v-model=\"scope.row.costPrice\"\r\n                controls-position=\"right\"\r\n                :precision=\"2\"\r\n                :step=\"0.1\"\r\n                :min=\"0.01\"\r\n                :max=\"99999\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"当前库存\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input-number\r\n                style=\"width:100%\"\r\n                size=\"mini\"\r\n                v-model=\"scope.row.count\"\r\n                controls-position=\"right\"\r\n                step-strictly\r\n                type=\"number\"\r\n                :min=\"1\"\r\n                :max=\"99999\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"商品编码\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input\r\n                size=\"mini\"\r\n                v-model=\"scope.row.snCode\"\r\n                :min=\"1\"\r\n                :max=\"30\"\r\n              />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"图片(750*750,<1MB)\">\r\n            <template slot-scope=\"scope\">\r\n              <image-upload\r\n                :width=\"'50px'\"\r\n                :height=\"'50px'\"\r\n                :isShowTip=\"false\"\r\n                :image.sync=\"scope.row.cover\"\r\n              ></image-upload>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column v-if=\"isEdit\" label=\"状态\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              {{ scope.row.statusName }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column v-if=\"isEdit\" label=\"操作\" width=\"80\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button v-if=\"!scope.row.isNew\" @click=\"changeStatus(scope.row)\" type=\"text\">\r\n                {{ scope.row.status === 3 ? \"下架\" : \"上架\" }}\r\n              </el-button>\r\n              <template v-else>-</template>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </main>\r\n      <main class=\"specifications-table\" v-if=\"tableData.length\">\r\n        <div class=\"table-title\">\r\n          总库存\r\n        </div>\r\n        <div class=\"\">{{ total }}</div>\r\n      </main>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  jsonDeepClone,\r\n  warningMsg,\r\n  uuid,\r\n  successMsg,\r\n  STATUS_CODE\r\n} from \"@/commonutils/common\";\r\nimport imageUpload from \"@/components/imageUpload\";\r\nimport { updateStatus } from \"../createGoods/controller/request\";\r\nexport default {\r\n  name: \"GoodsSpecifications\",\r\n  props: {\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    options: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    },\r\n    sku: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    imageUpload\r\n  },\r\n  data() {\r\n    return {\r\n      total: 0,\r\n      tableData: [],\r\n      headData: [],\r\n      priceList: [],\r\n      specificationsData: []\r\n    };\r\n  },\r\n  watch: {\r\n    // 父组件传入规格列表，监听并同步到规格列表：specificationsData\r\n    options: {\r\n      handler(val) {\r\n        if (val && val.length) {\r\n          this.specificationsData = jsonDeepClone(val);\r\n          this.headData = val.map(item => {\r\n            return item.specifications;\r\n          });\r\n        }\r\n      },\r\n      immediate: true\r\n    },\r\n    // 父组件传入sku列表，监听并同步到规格详情表格：tableData\r\n    sku: {\r\n      handler(val) {\r\n        if (val.length) {\r\n          this.tableData = jsonDeepClone(val);\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    // 监听规格详情表格数据并实时存入备份数据：priceList\r\n    tableData: {\r\n      handler(val) {\r\n        if (val.length) {\r\n          let count = 0;\r\n          this.priceList = val;\r\n          val.forEach(item => (count += item[\"count\"]));\r\n          this.total = count;\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description 修改sku状态\r\n     * @param {Object} val\r\n     * @returns { void }\r\n     */\r\n    async changeStatus(val) {\r\n      const status = val.status === 3 ? 4 : 3;\r\n      this.$confirm(`确定要${status === 3 ? \"上架\" : \"下架\"}sku？`, \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\"\r\n      })\r\n        .then(() => {\r\n          this.isLoading = true;\r\n          this.interceptorFn(async () => {\r\n            const { code, msg } = await updateStatus({\r\n              id: val.id,\r\n              status: status\r\n            });\r\n            if (code !== STATUS_CODE.success) {\r\n              warningMsg(this, msg);\r\n              return;\r\n            }\r\n            this.$set(\r\n              val,\r\n              \"statusName\",\r\n              val.status === 3 ? \"已下架\" : \"上架中\"\r\n            );\r\n            this.$set(val, \"status\", status);\r\n            successMsg(this, \"操作成功\");\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    /**\r\n     * @description 判断数组是否重复\r\n     * @param {Array} list\r\n     * @returns { void }\r\n     */\r\n    isRepeat(list) {\r\n      let hash = {};\r\n      for (let i in list) {\r\n        if (hash[list[i]]) {\r\n          return true;\r\n        }\r\n        hash[list[i]] = true;\r\n      }\r\n      return false;\r\n    },\r\n    /**\r\n     * @description 保存规格，并将规格列表更新到父组件\r\n     * @returns { void }\r\n     */\r\n    saveData() {\r\n      let originObj = this.specificationsData;\r\n      let tableData = [];\r\n      let headData = [];\r\n      const checkTypeList = [];\r\n      // 规格判空\r\n      if (!originObj.length) {\r\n        warningMsg(this, \"请先添加规格\");\r\n        return;\r\n      }\r\n      // 规格数据校验\r\n      for (let item of originObj) {\r\n        if (!item.specifications) {\r\n          warningMsg(this, \"规格名称不能为空\");\r\n          return;\r\n        }\r\n        if (item.specifications.length > 10) {\r\n          warningMsg(this, \"规格名称不能超过10个字符\");\r\n          return;\r\n        }\r\n        if (!item.type.length) {\r\n          warningMsg(\r\n            this,\r\n            `请至少给【${item.specifications}】规格添加一种类型`\r\n          );\r\n          return;\r\n        }\r\n        for (let child of item.type) {\r\n          if (!child.name) {\r\n            warningMsg(this, \"规格值不能为空\");\r\n            return;\r\n          }\r\n          if (child.name.length > 10) {\r\n            warningMsg(this, \"规格值不能超过10个字符\");\r\n            return;\r\n          }\r\n        }\r\n        headData.push(item.specifications);\r\n      }\r\n      if (originObj[1]) {\r\n        // 循环第一种规格，并将规格值插入checkTypeList数组，后续进行去重判断\r\n        for (let item of originObj[1].type) {\r\n          checkTypeList.push(item.name);\r\n        }\r\n      }\r\n      // 循环第二种规格\r\n      for (let node of originObj[0].type) {\r\n        // 将规格值插入checkTypeList数组，后续进行去重判断\r\n        checkTypeList.push(node.name);\r\n        // 如果存在多种规格则循环该规格列表，并组合数据\r\n        if (originObj[1]) {\r\n          // 循环规格值列表。格式化规格，并组合规格详情表格数据\r\n          for (let item of originObj[1].type) {\r\n            let obj = {};\r\n            if (item.name && node.name) {\r\n              // 循环规格1和规格2规格值拼接作为uid后续用来数据对比\r\n              let key = node.name + \"-\" + item.name;\r\n              if (this.priceList.length) {\r\n                // 开始对比数据，将当前key和之前checkTypeList数组保存的数据进行对比\r\n                for (let item of this.priceList) {\r\n                  // 如果key相同将checkTypeList数组保存的数据回填到当前对象中，并且中止循环\r\n                  if (item.uid === key) {\r\n                    obj[\"showPrice\"] = item.showPrice;\r\n                    obj[\"costPrice\"] = item.costPrice;\r\n                    obj[\"count\"] = item.count;\r\n                    obj[\"snCode\"] = item.snCode;\r\n                    obj[\"snstatusNameCode\"] = item.statusName || \"-\";\r\n                    obj[\"cover\"] = item.cover;\r\n                    break;\r\n                  } else {\r\n                    // 如果key不相同，判断当前数据为新增数据，并设置初始值\r\n                    obj[\"showPrice\"] = 1;\r\n                    obj[\"costPrice\"] = 1;\r\n                    obj[\"count\"] = 1;\r\n                    obj[\"snCode\"] = \"\";\r\n                    obj[\"cover\"] = \"\";\r\n                    obj[\"statusName\"] = \"-\";\r\n                    obj[\"isNew\"] = true;\r\n                  }\r\n                }\r\n              } else {\r\n                obj[\"showPrice\"] = 1;\r\n                obj[\"costPrice\"] = 1;\r\n                obj[\"count\"] = 1;\r\n                obj[\"snCode\"] = \"\";\r\n                obj[\"statusName\"] = \"-\";\r\n                obj[\"cover\"] = \"\";\r\n                obj[\"isNew\"] = true;\r\n              }\r\n              // 用规格值作为key设置对象数据\r\n              obj[originObj[0].specifications] = node.name;\r\n              obj[originObj[1].specifications] = item.name;\r\n              obj.uid = key;\r\n              obj.valueList = [node.name, item.name];\r\n              // 将组合好的数据插入到规格详情表格tableData\r\n              tableData.push(obj);\r\n            }\r\n          }\r\n        } else {\r\n          // 如果只有一种规格\r\n          let obj = {};\r\n          let key = node.name;\r\n          if (!node.name) {\r\n            return;\r\n          }\r\n          obj[originObj[0].specifications] = node.name;\r\n          obj.uid = key;\r\n          obj.valueList = [key];\r\n          // 判断当前对象key是否和备份数据priceList的key是否相同\r\n          if (this.priceList.length) {\r\n            for (let item of this.priceList) {\r\n              // 如果相同则回填\r\n              if (item.uid === key) {\r\n                obj[\"showPrice\"] = item.showPrice;\r\n                obj[\"costPrice\"] = item.costPrice;\r\n                obj[\"count\"] = item.count;\r\n                obj[\"snCode\"] = item.snCode;\r\n                obj[\"cover\"] = item.cover;\r\n                obj[\"statusName\"] = item.statusName || \"-\";\r\n                break;\r\n              } else {\r\n                obj[\"showPrice\"] = 1;\r\n                obj[\"costPrice\"] = 1;\r\n                obj[\"count\"] = 1;\r\n                obj[\"snCode\"] = \"\";\r\n                obj[\"statusName\"] = \"-\";\r\n                obj[\"cover\"] = \"\";\r\n                obj[\"isNew\"] = true;\r\n              }\r\n            }\r\n          } else {\r\n            obj[\"showPrice\"] = 1;\r\n            obj[\"costPrice\"] = 1;\r\n            obj[\"count\"] = 1;\r\n            obj[\"snCode\"] = \"\";\r\n            obj[\"statusName\"] = \"-\";\r\n            obj[\"cover\"] = \"\";\r\n            obj[\"isNew\"] = true;\r\n          }\r\n          tableData.push(obj);\r\n        }\r\n      }\r\n      if (this.isRepeat(checkTypeList)) {\r\n        warningMsg(this, \"规格值不能重复，请重新输入\");\r\n        return;\r\n      }\r\n      this.tableData = tableData;\r\n      this.headData = headData;\r\n      // 将组合后的数据更新到父组件\r\n      this.$emit(\"update:options\", this.specificationsData);\r\n    },\r\n    /**\r\n     * @description 删除类型\r\n     * @param {Object} type\r\n     * @param {Object} item\r\n     * @returns {void}\r\n     */\r\n    delType(type, item) {\r\n      item.type = item.type.filter(val => val.id !== type.id);\r\n    },\r\n    /**\r\n     * @description 删除规格\r\n     * @param {Object} item\r\n     * @returns {void}\r\n     */\r\n    delSpecifications(item) {\r\n      this.specificationsData = this.specificationsData.filter(\r\n        val => val.id !== item.id\r\n      );\r\n      this.tableData = [];\r\n      this.headData = [];\r\n    },\r\n    /**\r\n     * @description 添加规格值\r\n     * @param {Object} item\r\n     * @returns {void}\r\n     */\r\n    addType(item) {\r\n      if (item.type.length >= 10) {\r\n        warningMsg(this, \"规格最多只能添加10种\");\r\n        return;\r\n      }\r\n      item.type.push({\r\n        name: \"\",\r\n        id: uuid(),\r\n        isNew: true\r\n      });\r\n    },\r\n    /**\r\n     * 新增规格\r\n     * @returns {void}\r\n     */\r\n    addSpecifications() {\r\n      if (this.specificationsData.length >= 2) {\r\n        warningMsg(this, \"规格最多只能添加两种\");\r\n        return;\r\n      }\r\n      this.specificationsData.push({\r\n        specifications: \"\",\r\n        id: uuid(),\r\n        type: [\r\n          {\r\n            name: \"\",\r\n            id: uuid()\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.specifications-set {\r\n  width: auto;\r\n  margin: 0 auto;\r\n  .tag-list {\r\n    margin-top: 20px;\r\n    max-height: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .type-list {\r\n      display: flex;\r\n      padding-left: 68px;\r\n      margin-top: 20px;\r\n      flex-wrap: wrap;\r\n      .tag-item {\r\n        margin-right: 20px;\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n  .specifications-table {\r\n    min-width: 1000px;\r\n    display: flex;\r\n    /*padding-left: 30px;*/\r\n    margin-top: 20px;\r\n    .table-title {\r\n      font-size: 14px;\r\n      color: #333333;\r\n      font-weight: bolder;\r\n      padding-right: 15px;\r\n    }\r\n  }\r\n  .type-sub {\r\n    display: flex;\r\n    align-items: center;\r\n    > .save {\r\n      margin-left: 68px;\r\n    }\r\n    > div.red {\r\n      color: #f00;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}